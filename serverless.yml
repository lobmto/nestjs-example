service: serverless-example

plugins:
  - serverless-scriptable-plugin
  - serverless-layers
  - serverless-offline

package:
  exclude:
    - "**"
  include:
    - "dist/**"

custom:
  serverless-layers:
    layersDeploymentBucket: nestjs-example
  scriptable:
    hooks:
      before:package:initialize: npm run build
      offline:start:init: npm run build

provider:
  name: aws
  stage: dev
  region: ap-northeast-1
  runtime: nodejs14.x
  timeout: 10
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/test"
  environment:
    SECRET_SESSION_KEY: ${ssm:/${self:provider.stage}/lambda-session-key}
    DAILY_RECORD_TABLE: ${ssm:/${self:provider.stage}/daily-record-table}

functions:
  main:
    handler: dist/main.handler
    events:
      - http:
          method: ANY
          path: /
      - http:
          method: ANY
          path: '{proxy+}'

resources:
  Resources:
    TestTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: test
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
